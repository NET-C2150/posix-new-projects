trigger:
  branches:
    include:
      - main
      - release/*

variables:
  BuildDirName: build
  LinuxPool: ubuntu-18.04
  MacPool: macos-10.15
  ArchiveType: 7z
  ArchiveNameBase: mono-posix
  HostArchiveNameBase: $(ArchiveNameBase)-host
  LinuxHostBuildDir: $(BuildDirName)/host-linux-release/lib
  LinuxHostArchiveName: $(HostArchiveNameBase)-linux-x64.7z
  AndroidArchiveNameBase: $(ArchiveNameBase)-android
  AndroidArm32BuildDir: $(BuildDirName)/android-arm32-release/lib
  AndroidArm32ArchiveName: $(AndroidArchiveNameBase)-arm32.7z
  AndroidArm64BuildDir: $(BuildDirName)/android-arm64-release/lib
  AndroidArm64ArchiveName: $(AndroidArchiveNameBase)-arm64.7z
  AndroidX64BuildDir: $(BuildDirName)/android-x64-release/lib
  AndroidX64ArchiveName: $(AndroidArchiveNameBase)-x64.7z
  AndroidX86BuildDir: $(BuildDirName)/android-x86-release/lib
  AndroidX86ArchiveName: $(AndroidArchiveNameBase)-x86.7z
  MacHostArchiveNameBase: $(HostArchiveNameBase)-darwin
  MacHostX64ArchiveName: $(MacHostArchiveNameBase)-x64.7z
  MacHostArm64ArchiveName: $(MacHostArchiveNameBase)-arm64.7z
  MacHostBuildDirBase: $(BuildDirName)/host-darwin
  MacHostX64BuildDir: $(MacHostBuildDirBase)-x64-release/lib
  MacHostArm64BuildDir: $(MacHostBuildDirBase)-arm64-release/lib
  MacCatalystArchiveNameBase: $(ArchiveNameBase)-catalyst
  MacCatalystX64ArchiveName: $(MacCatalystArchiveNameBase)-x64.7z
  MacCatalystArm64ArchiveName: $(MacCatalystArchiveNameBase)-arm64.7z
  MacCatalystBuildDirBase: $(BuildDirName)/catalyst
  MacCatalystX64BuildDir: $(MacCatalystBuildDirBase)-x64-release/lib
  MacCatalystArm64BuildDir: $(MacCatalystBuildDirBase)-arm64-release/lib
  BuildScriptCommonOptions: --no-color --verbose --managed-verbosity diag --configuration Release

stages:
- stage: Build
  jobs:
  - job: linux_build_host
    displayName: Build for Linux
    pool:
      vmImage: '$(LinuxPool)'
    workspace:
      clean: all
    steps:
    - template: templates/linux-common.yaml

    - bash: |
        ./build.sh $(BuildScriptCommonOptions) host

    - task: ArchiveFiles@2
      displayName: Archive Linux host build
      inputs:
        rootFolderOrFile: $(LinuxHostBuildDir)
        includeRootFolder: false
        archiveType: $(ArchiveType)
        replaceExistingArchive: true
        archiveFile: $(Build.ArtifactStagingDirectory)/$(LinuxHostArchiveName)

    - task: PublishBuildArtifacts@1
      displayName: Upload Artifacts
      inputs:
        artifactName: 'Host'
        pathToPublish: $(Build.ArtifactStagingDirectory)

  - job: linux_build_android
    displayName: Build for Android
    pool:
      vmImage: '$(LinuxPool)'
    workspace:
      clean: all
    steps:
    - template: templates/linux-common.yaml

    - bash: |
        ./build.sh $(BuildScriptCommonOptions) --ndk $(ANDROID_NDK_HOME) android

    - task: ArchiveFiles@2
      displayName: Archive Android ARM32 build
      inputs:
        rootFolderOrFile: $(AndroidArm32BuildDir)
        includeRootFolder: false
        archiveType: $(ArchiveType)
        replaceExistingArchive: true
        archiveFile: $(Build.ArtifactStagingDirectory)/$(AndroidArm32ArchiveName)

    - task: ArchiveFiles@2
      displayName: Archive Android ARM64 build
      inputs:
        rootFolderOrFile: $(AndroidArm64BuildDir)
        includeRootFolder: false
        archiveType: $(ArchiveType)
        replaceExistingArchive: true
        archiveFile: $(Build.ArtifactStagingDirectory)/$(AndroidArm64ArchiveName)

    - task: ArchiveFiles@2
      displayName: Archive Android x86 build
      inputs:
        rootFolderOrFile: $(AndroidX86BuildDir)
        includeRootFolder: false
        archiveType: $(ArchiveType)
        replaceExistingArchive: true
        archiveFile: $(Build.ArtifactStagingDirectory)/$(AndroidX86ArchiveName)

    - task: ArchiveFiles@2
      displayName: Archive Android x86_64 build
      inputs:
        rootFolderOrFile: $(AndroidX64BuildDir)
        includeRootFolder: false
        archiveType: $(ArchiveType)
        replaceExistingArchive: true
        archiveFile: $(Build.ArtifactStagingDirectory)/$(AndroidX64ArchiveName)

    - task: PublishBuildArtifacts@1
      displayName: Upload Artifacts
      inputs:
        artifactName: 'Android'
        pathToPublish: $(Build.ArtifactStagingDirectory)

  - job: mac_build_host
    displayName: Build for macOS
    pool:
      vmImage: '$(MacPool)'
    workspace:
      clean: all
    steps:
    - template: templates/mac-build.yaml
      parameters:
        buildTarget: 'host'
        x64BuildDir: $(MacHostX64BuildDir)
        x64ArchiveName: $(MacHostX64ArchiveName)
        arm64BuildDir: $(MacHostArm64BuildDir)
        arm64ArchiveName: $(MacHostArm64ArchiveName)
        publishArtifactName: 'Host'

  - job: mac_build_catalyst
    displayName: Build for macOS Catalyst
    pool:
      vmImage: '$(MacPool)'
    workspace:
      clean: all
    steps:
    - template: templates/mac-build.yaml
      parameters:
        buildTarget: 'catalyst'
        x64BuildDir: $(MacCatalystX64BuildDir)
        x64ArchiveName: $(MacCatalystX64ArchiveName)
        arm64BuildDir: $(MacCatalystArm64BuildDir)
        arm64ArchiveName: $(MacCatalystArm64ArchiveName)
        publishArtifactName: 'macOS Catalyst'
